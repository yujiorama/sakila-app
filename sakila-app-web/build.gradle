plugins {
    id 'scala'
    id 'org.flywaydb.flyway' version '7.0.2'
}

sourceSets.integrationTest {

    scala {
        srcDirs('src/it/scala')
    }
}

ext {
    karateVersion = '0.9.6'
    jsonSchemaValidatorVersion = '2.2.6'
}

dependencies {
    implementation(project(':sakila-app-domain'))
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    testImplementation("com.intuit.karate:karate-junit5:${karateVersion}")
    testImplementation("com.intuit.karate:karate-apache:${karateVersion}")
    testImplementation("com.intuit.karate:karate-gatling:${karateVersion}")
    testImplementation("com.github.fge:json-schema-validator:${jsonSchemaValidatorVersion}")
    testImplementation("org.scala-lang:scala-library:${scalaVersion.major}.${scalaVersion.minor}.${scalaVersion.patch}")
}

flyway {
    workingDirectory = project.projectDir.absolutePath
    locations = ['filesystem:src/main/resources/db/migration']
    placeholders = [
        'DB_USER'    : System.properties.getOrDefault('flyway.user',
            project.properties.getOrDefault('flyway.user', 'sakila')),
        'DB_PASSWORD': System.properties.getOrDefault('flyway.password',
            project.properties.getOrDefault('flyway.password', 'sakila')),
    ]
}

bootBuildImage {
    imageName = "example.com/${project.name}:${project.version}"
}

(project.tasks.getByName('integrationTest') as Test).with {

    it.systemProperty 'karate.options', System.properties.getOrDefault('karate.options',
        project.properties.getOrDefault('karate.options', '--tags ~@ignore'))
    it.systemProperty 'karate.env', System.properties.getOrDefault('karate.env',
        project.properties.getOrDefault('karate.env', 'dev'))
    it.systemProperty 'app.url', System.properties.getOrDefault('app.url',
        project.properties.getOrDefault('app.url', 'http://localhost:8080'))
    //noinspection GroovyAssignabilityCheck
    it.outputs.upToDateWhen { false }
}

task gatlingRun(type: JavaExec) {
    group = 'verification'
    description 'Run Gatling Simulation'
    classpath = sourceSets.integrationTest.runtimeClasspath
    file("${buildDir}/reports/gatling").mkdirs()
    main = 'io.gatling.app.Gatling'
    args = [
        '-s',
        'org.bitbucket.yujiorama.sakilaapp.LoadSimulation',
        '-rf',
        "${buildDir}/reports/gatling",
    ]
    systemProperties(
        'karate.options': System.properties.getOrDefault('karate.options',
            project.properties.getOrDefault('karate.options', '--tags ~@ignore')),
        'karate.env': System.properties.getOrDefault('karate.env',
            project.properties.getOrDefault('karate.env', 'dev')),
        'app.url': System.properties.getOrDefault('app.url',
            project.properties.getOrDefault('app.url', 'http://localhost:8080')),
    )
}